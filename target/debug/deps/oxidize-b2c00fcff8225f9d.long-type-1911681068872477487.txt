Repeated<chumsky::combinator::Map<Then<chumsky::combinator::Map<Then<Repeated<Or<Just<char, &str, chumsky::error::Simple<char>>, Just<char, &str, chumsky::error::Simple<char>>>>, MapWithSpan<Recovery<Or<Or<Or<Or<Or<Or<chumsky::combinator::Map<chumsky::combinator::Map<chumsky::combinator::Map<Then<impl chumsky::Parser<char, <char as Character>::Collection, Error = chumsky::error::Simple<char>> + Copy + Clone, chumsky::combinator::Map<Then<Just<char, char, chumsky::error::Simple<char>>, impl chumsky::Parser<char, <char as Character>::Collection, Error = chumsky::error::Simple<char>> + Copy + Clone>, fn((char, String)) -> Vec<char>, (char, String)>>, fn((String, Vec<char>)) -> Vec<char>, (String, Vec<char>)>, fn(Vec<char>) -> String, Vec<char>>, _, String>, chumsky::combinator::Map<impl chumsky::Parser<char, <char as Character>::Collection, Error = chumsky::error::Simple<char>> + Copy + Clone, _, String>>, To<To<Then<Just<char, &str, chumsky::error::Simple<char>>, TakeUntil<Or<impl chumsky::Parser<char, (), Error = chumsky::error::Simple<char>> + Copy + Clone, Rewind<chumsky::primitive::End<chumsky::error::Simple<char>>>>>>, (&str, (Vec<char>, ())), ()>, (), Token>>, _>, _>, chumsky::combinator::Map<impl chumsky::Parser<char, <char as Character>::Collection, Error = chumsky::error::Simple<char>> + Copy + Clone, _, String>>, Choice<(To<Just<char, &str, chumsky::error::Simple<char>>, &str, Token>, To<Just<char, &str, chumsky::error::Simple<char>>, &str, Token>, To<Just<char, &str, chumsky::error::Simple<char>>, &str, Token>), chumsky::error::Simple<char>>>, SkipThenRetryUntil<char, 0>>, [closure@src/lexer.rs:111:24: 111:35], Token>>, fn((Vec<&str>, (Token, std::ops::Range<usize>))) -> (Token, std::ops::Range<usize>), (Vec<&str>, (Token, std::ops::Range<usize>))>, Repeated<Or<Just<char, &str, chumsky::error::Simple<char>>, Just<char, &str, chumsky::error::Simple<char>>>>>, fn(((Token, std::ops::Range<usize>), Vec<&str>)) -> (Token, std::ops::Range<usize>), ((Token, std::ops::Range<usize>), Vec<&str>)>>